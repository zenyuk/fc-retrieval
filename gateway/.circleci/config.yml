# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2.1
jobs:
  release:
    docker:
      # specify the version
      - image: circleci/golang:1.15
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/ConsenSys/fc-retrieval-gateway/
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: true
      - run: make

  publishDocker:
    environment:
      IMAGE_NAME: consensys/fc-retrieval-gateway
      IMAGE_VERSION: dev
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:$IMAGE_VERSION .
      - run:
          name: Publish Docker image
          command: |
            echo "$DOCKER_PASSWORD_RW" | docker login -u "$DOCKER_USER_RW" --password-stdin
            docker push $IMAGE_NAME:$IMAGE_VERSION

  utest:
    docker:
      # specify the version
      - image: circleci/golang:1.15
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/ConsenSys/fc-retrieval-gateway/
    steps:
      - checkout
      - run: make utest

workflows:
  version: 2
  test_and_release:
    jobs:
      - utest
      - release
      - publishDocker:
          filters:
            branches:
              only: main
          context:
            - dockerhub-quorumengineering-rw
          requires:
            - utest
            - release
