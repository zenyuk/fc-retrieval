// Code generated by go-swagger; DO NOT EDIT.

package gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetGatewayRegistersByIDHandlerFunc turns a function with the right signature into a get gateway registers by Id handler
type GetGatewayRegistersByIDHandlerFunc func(GetGatewayRegistersByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetGatewayRegistersByIDHandlerFunc) Handle(params GetGatewayRegistersByIDParams) middleware.Responder {
	return fn(params)
}

// GetGatewayRegistersByIDHandler interface for that can handle valid get gateway registers by Id params
type GetGatewayRegistersByIDHandler interface {
	Handle(GetGatewayRegistersByIDParams) middleware.Responder
}

// NewGetGatewayRegistersByID creates a new http.Handler for the get gateway registers by Id operation
func NewGetGatewayRegistersByID(ctx *middleware.Context, handler GetGatewayRegistersByIDHandler) *GetGatewayRegistersByID {
	return &GetGatewayRegistersByID{Context: ctx, Handler: handler}
}

/* GetGatewayRegistersByID swagger:route GET /registers/gateway/{id} Gateway getGatewayRegistersById

Get registered Gateway by Id

<b>Get a provider gateway by Id</b>

*/
type GetGatewayRegistersByID struct {
	Context *middleware.Context
	Handler GetGatewayRegistersByIDHandler
}

func (o *GetGatewayRegistersByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetGatewayRegistersByIDParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
