// Code generated by go-swagger; DO NOT EDIT.

package provider

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ConsenSys/fc-retrieval-register/models"
)

// GetProviderRegistersByIDOKCode is the HTTP code returned for type GetProviderRegistersByIDOK
const GetProviderRegistersByIDOKCode int = 200

/*GetProviderRegistersByIDOK Get a registered provider by Id

swagger:response getProviderRegistersByIdOK
*/
type GetProviderRegistersByIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ProviderRegister `json:"body,omitempty"`
}

// NewGetProviderRegistersByIDOK creates GetProviderRegistersByIDOK with default headers values
func NewGetProviderRegistersByIDOK() *GetProviderRegistersByIDOK {

	return &GetProviderRegistersByIDOK{}
}

// WithPayload adds the payload to the get provider registers by Id o k response
func (o *GetProviderRegistersByIDOK) WithPayload(payload *models.ProviderRegister) *GetProviderRegistersByIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider registers by Id o k response
func (o *GetProviderRegistersByIDOK) SetPayload(payload *models.ProviderRegister) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderRegistersByIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetProviderRegistersByIDDefault Internal error

swagger:response getProviderRegistersByIdDefault
*/
type GetProviderRegistersByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetProviderRegistersByIDDefault creates GetProviderRegistersByIDDefault with default headers values
func NewGetProviderRegistersByIDDefault(code int) *GetProviderRegistersByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &GetProviderRegistersByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get provider registers by Id default response
func (o *GetProviderRegistersByIDDefault) WithStatusCode(code int) *GetProviderRegistersByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get provider registers by Id default response
func (o *GetProviderRegistersByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get provider registers by Id default response
func (o *GetProviderRegistersByIDDefault) WithPayload(payload *models.Error) *GetProviderRegistersByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get provider registers by Id default response
func (o *GetProviderRegistersByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetProviderRegistersByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
