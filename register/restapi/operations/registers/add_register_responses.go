// Code generated by go-swagger; DO NOT EDIT.

package registers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/ConsenSys/fc-retrieval-register/models"
)

// AddRegisterOKCode is the HTTP code returned for type AddRegisterOK
const AddRegisterOKCode int = 200

/*AddRegisterOK Register added

swagger:response addRegisterOK
*/
type AddRegisterOK struct {

	/*
	  In: Body
	*/
	Payload *models.Register `json:"body,omitempty"`
}

// NewAddRegisterOK creates AddRegisterOK with default headers values
func NewAddRegisterOK() *AddRegisterOK {

	return &AddRegisterOK{}
}

// WithPayload adds the payload to the add register o k response
func (o *AddRegisterOK) WithPayload(payload *models.Register) *AddRegisterOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add register o k response
func (o *AddRegisterOK) SetPayload(payload *models.Register) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRegisterOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddRegisterDefault Internal error

swagger:response addRegisterDefault
*/
type AddRegisterDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddRegisterDefault creates AddRegisterDefault with default headers values
func NewAddRegisterDefault(code int) *AddRegisterDefault {
	if code <= 0 {
		code = 500
	}

	return &AddRegisterDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add register default response
func (o *AddRegisterDefault) WithStatusCode(code int) *AddRegisterDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add register default response
func (o *AddRegisterDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add register default response
func (o *AddRegisterDefault) WithPayload(payload *models.Error) *AddRegisterDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add register default response
func (o *AddRegisterDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddRegisterDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
